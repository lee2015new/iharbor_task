<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
>
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
	<context:component-scan base-package="com.iharbor" />
	
	<!-- setting Redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWait" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />
		
	<bean id="redisManager" class="com.iharbor.core.redis.RedisManager">
	</bean>

	<!-- setting Redis -->
	
	<!-- setting Mysql -->
	<context:property-placeholder location="classpath:application.properties" ignore-unresolvable="true"/>
	<bean id="dataSourceIharbor" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.db1.url}" />
		<property name="username" value="${jdbc.db1.username}" />
		<property name="password" value="${jdbc.db1.password}" />
		<!-- Connection Pooling Info -->
		<property name="initialSize" value="10" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="10" />
		<property name="maxWait" value="60000" />
		<property name="poolPreparedStatements" value="false" />
		<property name="defaultAutoCommit" value="false" />
		<property name="removeAbandonedTimeout" value="180" />
		<property name="removeAbandoned" value="true" />
	</bean>
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactoryIharbor" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceIharbor" />
		<property name="configLocation" value="classpath:mybatis_config.xml" />
		<property name="mapperLocations" value="classpath:/com/iharbor/**/dao/sqlmap/*.xml" />
	</bean>
	
	<bean id="sqlSessionIharbor" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryIharbor" />
	</bean>
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManagerIharbor"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceIharbor" />
	</bean>
	
	<!-- 事务拦截的类及方法 -->
	<tx:advice id="txAdviceIharbor" transaction-manager="transactionManagerIharbor">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="do*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com..service..*.*(..))" advice-ref="txAdviceIharbor" />
	</aop:config>
		<!-- mybatis Dao -->
	<bean id="supperDaoIharbor" class="com.iharbor.core.supper.dao.DefaultSupperDao" >
		<property name="sqlSessionTemplate" ref="sqlSessionIharbor" />
	</bean>
	<!-- setting Mysql -->
</beans>